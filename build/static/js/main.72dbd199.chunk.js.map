{"version":3,"sources":["components/ProductList/Product.js","components/ProductList/ProductList.js","services/meli-api.js","components/Seller/Seller.js","components/Header/Header.js","pages/SellerPage/SellerPage.js","components/Welcome/Welcome.js","pages/WelcomePage/WelcomePage.js","App.js","serviceWorker.js","index.js"],"names":["Wrapper","styled","a","_templateObject","Price","div","_templateObject2","Image","_templateObject3","Product","_this$props","this","props","title","id","site_id","price","seller","permalink","currency_id","available_quantity","sold_quantity","buying_mode","listing_type_id","stop_time","condition","thumbnail","accepts_mercadopago","installments","address","shipping","seller_address","attributes","original_price","category_id","official_store_id","catalog_product_id","reviews","tags","react_default","createElement","href","target","src","React","PureComponent","ProductList_templateObject","List","ProductList_templateObject2","Loading","ReactLoading","ProductList_templateObject3","ProductsList","state","data","results","loadProducts","offset","sellerId","_this","console","log","concat","arguments","length","undefined","url","fetch","then","response","json","getProducts","setState","Object","objectSpread","paging","loadMoreProducts","hasMoreProducts","nextOffset","limit","total","ProductList_Wrapper","react_infinite_scroller_default","pageStart","loadMore","hasMore","loader","key","type","color","map","product","Product_Product","assign","Seller_templateObject","Seller","_this2","getSeller","Seller_Wrapper","nickname","Header_templateObject","Header","Header_Wrapper","Seller_Seller","SellerPage","match","params","Fragment","Header_Header","ProductList_ProductsList","Welcome_templateObject","Welcome","_React$PureComponent","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","onSellerIdChange","event","value","onKey","_ref","history","push","inherits","createClass","Welcome_Wrapper","maxLength","onChange","onKeyPress","autofocus","withRouter","components_Welcome_Welcome","App","react_router_dom","react_router","path","exact","component","WelcomePage","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.72dbd199.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.a`\n  position: relative;\n  display: grid;\n  grid-template-columns: 90px auto 90px;\n  cursor: pointer;\n  text-decoration: none;\n  color: inherit;\n\n  &:hover {\n    :before {\n      content: '';\n      background: rgba(0, 0, 0, 0.75);\n      position: absolute;\n      right: 0;\n      width: 10px;\n      height: 100%;\n    }\n  }\n\n  h3 {\n    font-size: 1.2em;\n    font-weight: normal;\n  }\n`\n\nconst Price = styled.div`\n  display: flex;\n  justify-content: center;\n  font-family: 'Montserrat';\n  font-size: 1.3rem;\n`\n\nconst Image = styled.div`\n  display: flex;\n`\n\nexport default class Product extends React.PureComponent {\n  render() {\n    const {\n      id,\n      site_id,\n      title,\n      seller,\n      price,\n      currency_id,\n      available_quantity,\n      sold_quantity,\n      buying_mode,\n      listing_type_id,\n      stop_time,\n      condition,\n      permalink,\n      thumbnail,\n      accepts_mercadopago,\n      installments,\n      address,\n      shipping,\n      seller_address,\n      attributes,\n      original_price,\n      category_id,\n      official_store_id,\n      catalog_product_id,\n      reviews,\n      tags\n    } = this.props\n\n    return (\n      <Wrapper href={permalink} target=\"_blank\">\n        <Image>\n          <img src={thumbnail} />\n        </Image>\n        <h3>{title}</h3>\n        <Price>\n          <p>${price}</p>\n        </Price>\n      </Wrapper>\n    )\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport ReactLoading from 'react-loading'\nimport Product from './Product'\nimport { getProducts } from 'services/meli-api'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  background: #eee;\n`\n\nconst List = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 800px;\n  background: white;\n`\n\nconst Loading = styled(ReactLoading)`\n  margin: auto;\n  padding-bottom: 15px;\n`\n\nexport default class ProductsList extends React.PureComponent {\n  state = {\n    data: {\n      results: []\n    }\n  }\n\n  componentDidMount() {\n    this.loadProducts()\n  }\n\n  loadProducts = offset => {\n    const { sellerId } = this.props\n    console.log(`-- load products for '${sellerId}', offset '${offset}'`)\n    getProducts(sellerId, offset).then(data => {\n      // Load more, append new products.\n      if (offset) {\n        this.setState({\n          data: {\n            ...this.state.data,\n            paging: data.paging,\n            results: this.state.data.results.concat(data.results)\n          }\n        })\n        return\n      }\n\n      // First load.\n      this.setState({ data })\n    })\n  }\n\n  loadMoreProducts = () => {\n    console.log('LOAD MORE...')\n    const { paging } = this.state.data\n    if (!paging) return\n    if (!this.hasMoreProducts()) return\n\n    const { offset, limit } = paging\n    const nextOffset = offset + limit\n    console.log('LOAD MORE, next offset:', nextOffset)\n    this.loadProducts(nextOffset)\n  }\n\n  hasMoreProducts = () => {\n    const { paging } = this.state.data\n    if (!paging) return false\n\n    const { total, offset, limit } = paging\n    return offset + limit < total\n  }\n\n  render() {\n    const { results } = this.state.data\n\n    return (\n      <Wrapper>\n        <List>\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={this.loadMoreProducts}\n            hasMore={this.hasMoreProducts()}\n            loader={<Loading key=\"loader\" type=\"spin\" color=\"black\" />}\n          >\n            {results.map(product => (\n              <Product key={product.id} {...product} />\n            ))}\n          </InfiniteScroll>\n        </List>\n      </Wrapper>\n    )\n  }\n}\n","// const sellerId = '51776267'\n\nexport function getSeller(sellerId) {\n  const url = `https://api.mercadolibre.com/users/${sellerId}`\n  return fetch(url).then(response => response.json())\n}\n\nexport function getProducts(sellerId, offset = 0) {\n  const url = `https://api.mercadolibre.com/sites/MLA/search?seller_id=${sellerId}&offset=${offset}`\n  return fetch(url).then(response => response.json())\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { getSeller } from 'services/meli-api'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nexport default class Seller extends React.PureComponent {\n  state = {\n    seller: {}\n  }\n\n  componentDidMount() {\n    const { id } = this.props\n    getSeller(id).then(seller => {\n      this.setState({ seller })\n    })\n  }\n\n  render() {\n    const { seller } = this.state\n\n    return <Wrapper>{seller.nickname}</Wrapper>\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Seller from 'components/Seller'\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  background: #fff159;\n  height: 50px;\n  margin-bottom: 5px;\n  font-size: 2rem;\n`\n\nexport default class Header extends React.PureComponent {\n  render() {\n    const { sellerId } = this.props\n\n    return (\n      <Wrapper>\n        <Seller id={sellerId} />\n      </Wrapper>\n    )\n  }\n}\n","import React from 'react'\nimport ProductList from 'components/ProductList'\nimport Header from 'components/Header'\n\nexport default class SellerPage extends React.PureComponent {\n  render() {\n    const { sellerId } = this.props.match.params\n\n    return (\n      <>\n        <Header sellerId={sellerId} />\n        <ProductList sellerId={sellerId} />\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  position: absolute;\n  height: 100%;\n  background: #fff159;\n\n  input {\n    padding: 10px;\n    width: 90%;\n    font-size: 18vw;\n    text-align: center;\n  }\n`\n\nexport class Welcome extends React.PureComponent {\n  state = {\n    sellerId: ''\n  }\n\n  onSellerIdChange = event => {\n    this.setState({ sellerId: event.target.value })\n  }\n\n  onKey = ({ key }) => {\n    if (key !== 'Enter') return\n    const { history } = this.props\n    history.push(`/${this.state.sellerId}`)\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <h3>\n          Ingresá el <b>seller id</b> para ver su listado de productos:\n        </h3>\n        <input\n          type=\"number\"\n          maxLength=\"12\"\n          value={this.state.sellerId}\n          onChange={this.onSellerIdChange}\n          onKeyPress={this.onKey}\n          autofocus=\"true\"\n        />\n      </Wrapper>\n    )\n  }\n}\n\nexport default withRouter(Welcome)\n","import React from 'react'\nimport Welcome from 'components/Welcome'\n\nexport default class SellerPage extends React.PureComponent {\n  render() {\n    return <Welcome />\n  }\n}\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport SellerPage from 'pages/SellerPage'\nimport WelcomePage from 'pages/WelcomePage'\n\nfunction App() {\n  return (\n    <Router>\n      <Route path=\"/\" exact component={WelcomePage} />\n      <Route path=\"/:sellerId\" exact component={SellerPage} />\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}